{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/NotFound/NotFound.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","concat","image","title","text","SearchBar","state","value","doSearch","event","_this","setState","target","clearTimeout","timeout","setTimeout","callback","lib_default","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","catch","error","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","id","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","NotFound","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","App","Fragment","elements_Header_Header","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.52e4ce0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\" >\r\n          <img className=\"rmdb-logo\" src=\"./images/getflix_logo.png\" alt=\"rmdb Logo\" />\r\n        </Link>\r\n        <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '540ef7b2fe6372d7a5e0798f3eb197cd';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\" style={{\r\n                background: \r\n                `linear-gradient(to bottom, rgba(0, 0, 0, 0) 39%, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0, 0.65) 100%),\r\n                url('${props.image}'), #1c1c1c`\r\n                }}>\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout)\r\n\r\n        this.timeout = setTimeout( () => {\r\n            this.props.callback(this.state.value)\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n    \r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      )\r\n    })\r\n    return gridElements;\r\n  }\r\n    \r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1>: null }\r\n      <div className=\"rmdb-grid-content\">\r\n        {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ?\r\n        <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}`}}>\r\n          <img src={props.image} alt=\"moviethumb\" />\r\n        </Link>\r\n        :\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\n\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true});\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    console.log(searchTerm)\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    })\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      this.setState({\r\n        movies: [...this.state.movies, ...result.results],\r\n        heroImage: this.state.heroImage || result.results[0],\r\n        loading: false,\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      })\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {this.state.heroImage ?\r\n          <div>\r\n            <HeroImage \r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n             />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>: null }\r\n          \r\n          <div className=\"rmdb-home-grid\">\r\n            <FourColGrid \r\n              header={this.state.searchTerm ? 'Search Results' : 'Popular Movies'}\r\n              loading={this.state.loading}\r\n            >\r\n              {this.state.movies.map((element, i) => {\r\n                return <MovieThumb\r\n                    key={i}\r\n                    clickable={true}\r\n                    image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                    movieId={element.id}\r\n                    movieName={element.original_title}\r\n                  />  \r\n              })}\r\n            </FourColGrid>\r\n            {this.state.loading ? <Spinner /> : null}\r\n            {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n              <LoadMoreBtn text=\"Load more\" onClick={this.loadMoreItems} />\r\n              : null }\r\n          </div>\r\n        </div>\r\n    )\r\n  }    \r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Sorry, this page doesn't exist!</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n      <div className=\"rmdb-navigation\">\r\n        <div className=\"rmdb-navigation-content\">\r\n          <Link to=\"/\">\r\n            <p>Home</p>\r\n          </Link>\r\n          <p>/</p>\r\n          <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'} \r\n            clickable={false}\r\n            />\r\n        </div>\r\n        <div  className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map( (element, i) => {\r\n            return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n          })}\r\n        </div>\r\n        <FontAwesome className='fa-film' name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n  \r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img  \r\n        src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: true})\r\n    //first fetch the movie\r\n    const endpoint =`${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            //fetch actors in the setState callback\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n              const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n\r\n              this.setState({\r\n                actors: result.cast,\r\n                directors,\r\n                loading: false\r\n              })\r\n            })\r\n          }) \r\n        }\r\n      })\r\n      .catch(error => console.error('Error', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ?\r\n          <div>     \r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n          </div>\r\n        : null }\r\n        {this.state.actors ?\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={'Actors'}>              \r\n              {this.state.actors.map( (element, i) => {\r\n                return <Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n          : null }\r\n          {!this.state.actors && !this.state.loading ? <h1>No Movie Found</h1> : null}\r\n          {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport  { BrowserRouter, Route,Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\nimport Movie from '../Movie/Movie';\r\n\r\nconst App = () => {\r\n  return ( \r\n    <BrowserRouter>\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/:movieId\" component={Movie} exact />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}